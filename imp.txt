Building a complete supply chain management system on a blockchain would require a comprehensive system that integrates various technologies and functionalities. Here's an example of a possible architecture and code that could be used to build a supply chain management system on a blockchain:

Data storage: Use a distributed database such as IPFS (InterPlanetary File System) to store product and inventory data.

Smart Contracts: Use Solidity to create smart contracts that can automate certain supply chain functions and enable automatic payments and settlement between supply chain participants.

APIs: Use APIs to integrate data from external sources such as logistics providers and payment systems.

User Interface: Create a user interface that enables supply chain participants to interact with the system and track products and inventory.

Below is an example of Solidity code for a smart contract that can be used to automate payment and settlement between supply chain participants:
pragma solidity ^0.8.0;

contract SupplyChain {
    struct Product {
        string name;
        uint256 price;
        uint256 quantity;
        address payable seller;
        address payable buyer;
        bool isSold;
    }

    Product[] public products;

    function sellProduct(string memory _name, uint256 _price, uint256 _quantity) public {
        products.push(Product({
            name: _name,
            price: _price,
            quantity: _quantity,
            seller: payable(msg.sender),
            buyer: payable(address(0)),
            isSold: false
        }));
    }

    function buyProduct(uint256 _productId) public payable {
        Product storage product = products[_productId];
        require(product.buyer == address(0), "Product is already sold.");
        require(msg.value == product.price * product.quantity, "Insufficient funds.");

        product.buyer = payable(msg.sender);
        product.seller.transfer(msg.value);

        product.isSold = true;
    }
}
In this example, the SupplyChain smart contract stores information about products, including their name, price, quantity, seller, buyer, and whether they are sold. The sellProduct function is used to add a new product to the supply chain system, and the buyProduct function is used by a buyer to purchase a product.

When a buyer calls the buyProduct function, they must provide the correct amount of Ether to purchase the product. If the buyer has provided the correct amount of Ether, the buyProduct function will transfer the funds to the seller, mark the product as sold, and update the buyer and seller addresses accordingly.

Again, this is just an example, and building a complete supply chain management system on a blockchain would require more extensive coding and integration with other technologies.